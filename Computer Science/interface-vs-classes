// Interfaces is a contract, an interface is an empty shell

interface MotorVehicle {
    void run();
    int getFuel();
}


class Car implements MotorVehicle {
    int fuel;

    void run() {
        print("Wrroooooom");
    }

    int getFuel() {
        return this.fuel;
    }
}


// Abstract classes: similiar to interfaces, but you can define a behavior for them:
//


abstract class MotorVehicle {
        int fuel;

        int getFuel() {
            return this.fuel;
        }

        abstract void run();
}


class Car extends MotorVehicle {
    void run() {
        print("Wrroooomm");
    }
}
